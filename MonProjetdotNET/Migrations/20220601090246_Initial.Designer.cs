// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonProjetdotNET.Data;

namespace MonProjetdotNET.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220601090246_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MonProjetdotNET.Models.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chefs");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Parfum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parfums");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Parfum_Sweetmeat", b =>
                {
                    b.Property<int>("ParfumId")
                        .HasColumnType("int");

                    b.Property<int>("SweetmeatId")
                        .HasColumnType("int");

                    b.HasKey("ParfumId", "SweetmeatId");

                    b.HasIndex("SweetmeatId");

                    b.ToTable("Parfum_Sweetmeats");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Sweetmeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChefId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SweetmeatCategory")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChefId");

                    b.ToTable("Sweetmeats");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Parfum_Sweetmeat", b =>
                {
                    b.HasOne("MonProjetdotNET.Models.Parfum", "Parfum")
                        .WithMany("Parfum_Sweetmeat")
                        .HasForeignKey("ParfumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonProjetdotNET.Models.Sweetmeat", "Sweetmeat")
                        .WithMany("Parfum_Sweetmeat")
                        .HasForeignKey("SweetmeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parfum");

                    b.Navigation("Sweetmeat");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Sweetmeat", b =>
                {
                    b.HasOne("MonProjetdotNET.Models.Chef", "Chef")
                        .WithMany("Sweatmeats")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chef");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Chef", b =>
                {
                    b.Navigation("Sweatmeats");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Parfum", b =>
                {
                    b.Navigation("Parfum_Sweetmeat");
                });

            modelBuilder.Entity("MonProjetdotNET.Models.Sweetmeat", b =>
                {
                    b.Navigation("Parfum_Sweetmeat");
                });
#pragma warning restore 612, 618
        }
    }
}
